{{ 'https://momijitalks.com/clickandbuilds/MomijiTalks/wp-widget.php' | script_tag }}

<style>
.wp_entry  { padding-bottom:0.8em; margin-left:-1em }

.wp_post span a, .wp_post  { font-weight:bold; font-size:90% }

.wp_desc { font-size: 70%; }
.wp_date { font-style: italic; }
//.wp_categories { font-size:1em; line-height:0.1em }
</style>
          
<?php
// 5 latest WordPress Posts with "2nd February 2019" formatting
post_summary(1, 'jS F y');
?>

------

Matthew_Skala1
Matthew_Skala1
Shopify Partner
107 0 14
"Ask in the forums" is Shopify's way of avoiding the question.  You won't get a response from them here and they're unlikely to delete the thread for you.

The answer in this case is simple:  you cannot use PHP hosted on Shopify at all.  If you want PHP as part of your store then you have to host it somewhere else and link to it (or include the output by IFRAME or similar) from your Shopify-hosted page.  What the PHP could do in such a case would be limited (in particular, it can't get access to server-side information unless that can be passed to it by a special URLs or such).  If you can simulate the effect using client-side Javascript instead, that's likely a better option, but then you're limited to client-side.

â€Ž10-28-2017 10:37 AM
Aravind_Baskara
Aravind_Baskara
Shopify Partner
10 0 3
In addition to the above response

If your php url can return a "text/javascript" response, you can inject it as script tag.

If it can return a blank "image/png" pixel, you can inject it as an img tag src. Eg: https://help.shopify.com/manual/orders/status-tracking/add-conversion-tracking-to-thank-you-page#exa...

These would be your best bets.

Another thing to note if you are looking to track conversions, you need to look this up - https://help.shopify.com/manual/orders/status-tracking/first-time-accessed.

Hope this helps!

Aravind



1

You can't include a PHP script within a Shopify template. Shopify templates allow only HTML, CSS, JavaScript and Liquid. HTML gives you a few possibilities to include external resources, for example an iframe or an external script (JavaScript). Using JavaScript you could also load an external resource and replace some of your HTML dynamically.

Webhooks can't be used to accomplish this task. Webhooks are used in back-end to back-end communication. You're developing something to be used in the front-end.