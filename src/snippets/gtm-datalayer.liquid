{% if template == 'index' %}
	<script>
		const currentURL = window.location.href;
		
		window.dataLayer = window.dataLayer || [];
		window.dataLayer.push({
			'URL': `${currentURL}`
		});
		//console.log('DL template index');
		//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
	</script>
{% endif %}

{% if page.url contains 'pages' %}
	<script>
		const currentURL = window.location.href;

		window.dataLayer = window.dataLayer || [];
		window.dataLayer.push({
			'pageCategory': '{{ handle }}',
			'URL': `${currentURL}`
		});
		//console.log('DL pages');
		//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
	</script>
{% endif %}

{% if template == 'collection' %}
	<script>
		const currentURL = window.location.href;

		window.dataLayer = window.dataLayer || [];
		window.dataLayer.push({
			'pageCategory': '{{ collection.title }}',
			'URL': `${currentURL}`
		});
		//console.log(dataLayer);
		//console.log('DL collections');
	</script>
{% endif %}

{% if product.url contains 'products' %}
	{%- assign current_variant = product.selected_or_first_available_variant -%}
	<script>
		const currentURL = window.location.href;

		window.dataLayer = window.dataLayer || [];
		window.dataLayer.push({
			'event': 'view_item',
			'ecommerce': {
				'items': [{
					'pageCategory': '{{ product.type }}',
					'productBrand': '{{ product.vendor }}',
					'productID': '{{ current_variant.id }}',
					'productName': '{{ product.title }}',
					'productPrice': '{{ current_variant.price | times: 0.01 }}',
					'productSKU': '{{ current_variant.sku }}',
					'productVariant': '{{ current_variant.title }}',
					'URL': `${currentURL}`
				}]
			}
		});
		//console.log('DL products');
		//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
	</script>
{% endif %}

{% if template == 'cart' %}
	<script>
		const currentURL = window.location.href;
		window.dataLayer = window.dataLayer || [];
		window.dataLayer.push({
			'cartSubtotal': '{{ cart.original_total_price | times: 0.01 }}',
			'currency': '{{ shop.currency }}',
			'items': [
						{% for item in cart.items %}
						{
							'pageCategory': '{{item.product.type}}',
							'productBrand': '{{item.vendor}}',
							'productID': '{{item.variant.id}}',
							'productName': '{{item.title}}',
							'productPrice': '{{item.line_price | times: 0.01}}',
							'productSKU': '{{item.variant.sku}}',
							'productVariant': '{{item.variant.title}}',
							'quantity': '{{item.quantity | times: 1}}'
						},
						{% endfor %}
					],
			'pageCategory': '{{ template.name }}',
			'quantity': '{{ cart.item_count }}',
			'totalPurchase': '{{ cart.total_price | times: 0.01 }}',
			'URL': `${currentURL}`
		});
		//console.log('DL cart');
		//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
	</script>
{% endif %}

{% if checkout %}
	{% if content_for_layout contains 'data-step="contact_information"' %}
		<script>
			const currentURL = window.location.href;
			window.dataLayer = window.dataLayer || [];
			window.dataLayer.push({
				'pageCategory': 'contact_information',
				'URL': `${currentURL}`
			});
			//console.log('contact_information step');
			//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
		</script> 
	{% elsif content_for_layout contains 'data-step="shipping_method"' %}
		<script>
			const currentURL = window.location.href;
			window.dataLayer = window.dataLayer || [];
			window.dataLayer.push({
				'pageCategory': 'shipping_method',
				'URL': `${currentURL}`
			});
			//console.log('shipping_method step');
			//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
		</script>
	{% elsif content_for_layout contains 'data-step="payment_method"' %}
		<script>	
			const currentURL = window.location.href;
			window.dataLayer = window.dataLayer || [];
			window.dataLayer.push({
				'pageCategory': 'payment_method',
				'paymentMethod': 'not available',
				'URL': `${currentURL}`
			});
			//console.log('payment_method step');
			//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
		</script>
	{% elsif content_for_layout contains 'thank_you' or content_for_layout contains 'thank-you' %}
		<script>
			const currentURL = window.location.href;
			window.dataLayer = window.dataLayer || [];
			window.dataLayer.push({
				'event': 'purchase',
				'ecommerce': {
					'cartSubtotal': '{{ order.line_items_subtotal_price | times: 0.01  }}',
					'currency': '{{ checkout.currency }}',
					'items': [
								{% for line_item in order.line_items %}
								{
									'pageCategory': '{{line_item.product.type}}',
									'productBrand': '{{line_item.vendor}}',
									'productID': '{{line_item.variant.id}}',
									'productName': '{{line_item.title}}',
									'productPrice': '{{line_item.line_price | times: 0.01}}',
									'productSKU': '{{line_item.variant.sku}}',
									'productVariant': '{{line_item.variant.title}}',
									'productQty': '{{line_item.quantity}}'
								},
								{% endfor %}
								],
					'orderID': '{{ order.name }}',
					'pageCategory': 'thank_you',
					'paymentMethod': [
						{% for transaction in order.transactions %}
							{
								'paymentMethod': '{{ transaction.gateway }}'
							},
						{% endfor %}
						],
					'quantity': '{{ order.line_items | size }}',
					'totalPurchase': '{{ order.total_price | times: 0.01 }}',
					'URL': `${currentURL}`
				}
			});
			//console.log('thank_you step');
			//console.log('dataLayer', JSON.stringify(dataLayer, null, 0));
		</script>
	{% endif %}
{% endif %}

{% comment %}

<script>
window.addEventListener('DOMContentLoaded', (event) => {
	//const addToCartButtons = document.querySelectorAll('#AddToCart');
	const addToCartButtons = document.querySelectorAll('button.add-to-cart');
	function dlAddToCart() {
		console.log('datalayerrrr');
	}
	addToCartButtons.forEach(function(addToCartButton) {
		console.log('button click');
		addToCartButton.addEventListener('click', dlAddToCart);
	});
});

// #AddToCart (regular product page & sundae product page)
// .button-add 
// .btn__agregar (eye shine landing)
// .btn__midabi (momiji life landing)
// .lion-redeem-reward-modal__button--confirm (loyalty lion confirm dialog)
// add-to-cart (current sundae landing)
</script> 


if (Shopify.Checkout.step == 'contact_information'){
	...
}

	Cómo armar un url de checkout, falta el checkout_id o checkoutToken
	'{{ shop.secure_url }}\/10992810\/checkouts\/{{}}\/contact_information'
	Shopify.ClientAttributesCollection.checkoutToken es el token del checkout

Abril 2021
https://flintanalytics.com/installing-enhanced-ecommerce-using-google-tag-manager-and-the-data-layer/
Y aquí los ejemplos: https://enhancedecommerce.appspot.com/checkout

{%- endcomment -%}