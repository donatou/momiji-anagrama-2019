{% layout 'password' %}

<main class="legal bg-purple">
  <section class="section__principal">
    <div class="container">
      <div class="row">
        <div class="col-md-7 col-lg-8">
          <a href="https://www.undiasinmujeres.mx/" rel="noopener nofollow">
            <h1 class="h2">Un día sin
              <span class="txt-type" data-wait="1000" data-words='["Cecie.", "Nat.", "Aída.", "Bárbara.","Rocío.", "Sofía.", "Patricia.", "Chris.", "Mónica.", "Chio.", "Ceci.", "Anel.", "Julia.", "Valentina.", "Claudia.", "Mariana.", "Cecy.", "Ale.", "Sabrina.", "Jana."]'></span>
            </h1>       
          </a>  
        </div>
      </div>
    </div>
  </section>
</main>

<style>
.section__principal {
  height: 100vh !important;
  overflow: hidden !important;
}
.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 90%;
  padding: 0 3rem;
}
h1.h2:hover {
  color: #F06C4E;
}
.txt-type {
  text-decoration: underline;
}
</style>

<script>
// ES6 Class
class TypeWriter {
  constructor(txtElement, words, wait = 3000) {
    this.txtElement = txtElement;
    this.words = words;
    this.txt = '';
    this.wordIndex = 0;
    this.wait = parseInt(wait, 10);
    this.type();
    this.isDeleting = false;
  }

  type() {
    // Current index of word
    const current = this.wordIndex % this.words.length;
    // Get full text of current word
    const fullTxt = this.words[current];

    // Check if deleting
    if(this.isDeleting) {
      // Remove char
      this.txt = fullTxt.substring(0, this.txt.length - 1);
    } else {
      // Add char
      this.txt = fullTxt.substring(0, this.txt.length + 1);
    }

    // Insert txt into element
    this.txtElement.innerHTML = `<span class="txt">${this.txt}</span>`;

    // Initial Type Speed
    let typeSpeed = 200;

    if(this.isDeleting) {
      typeSpeed /= 2;
    }

    // If word is complete
    if(!this.isDeleting && this.txt === fullTxt) {
      // Make pause at end
      typeSpeed = this.wait;
      // Set delete to true
      this.isDeleting = true;
    } else if(this.isDeleting && this.txt === '') {
      this.isDeleting = false;
      // Move to next word
      this.wordIndex++;
      // Pause before start typing
      typeSpeed = 600;
    }

    setTimeout(() => this.type(), typeSpeed);
  }
}


// Init On DOM Load
document.addEventListener('DOMContentLoaded', init);

// Init App
function init() {
  const txtElement = document.querySelector('.txt-type');
  const words = JSON.parse(txtElement.getAttribute('data-words'));
  const wait = txtElement.getAttribute('data-wait');
  // Init TypeWriter
  new TypeWriter(txtElement, words, wait);
}
</script>